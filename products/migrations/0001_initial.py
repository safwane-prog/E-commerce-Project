# Generated by Django 5.2.4 on 2025-08-10 06:33

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('image', models.ImageField(upload_to='category/')),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Option',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=300)),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('old_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('discount', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=4, null=True)),
                ('description_1', models.TextField()),
                ('description_2', models.TextField(blank=True, null=True)),
                ('description_3', models.TextField(blank=True, null=True)),
                ('image_1', models.ImageField(upload_to='products/')),
                ('image_2', models.ImageField(blank=True, null=True, upload_to='products/')),
                ('image_3', models.ImageField(blank=True, null=True, upload_to='products/')),
                ('image_4', models.ImageField(blank=True, null=True, upload_to='products/')),
                ('image_5', models.ImageField(blank=True, null=True, upload_to='products/')),
                ('image_6', models.ImageField(blank=True, null=True, upload_to='products/')),
                ('image_7', models.ImageField(blank=True, null=True, upload_to='products/')),
                ('image_8', models.ImageField(blank=True, null=True, upload_to='products/')),
                ('image_9', models.ImageField(blank=True, null=True, upload_to='products/')),
                ('image_10', models.ImageField(blank=True, null=True, upload_to='products/')),
                ('is_active', models.BooleanField(default=True)),
                ('sales_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('categories', models.ManyToManyField(related_name='products', to='products.category')),
                ('options', models.ManyToManyField(related_name='products', to='products.option')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('rating', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('review', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='products.product')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
